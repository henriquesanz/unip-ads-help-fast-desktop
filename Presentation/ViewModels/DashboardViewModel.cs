using HelpFastDesktop.Presentation.Commands;
using HelpFastDesktop.Core.Interfaces;
using HelpFastDesktop.Core.Entities;
using System.Collections.ObjectModel;
using System.Windows.Input;

namespace HelpFastDesktop.Presentation.ViewModels;

public class DashboardViewModel : BaseViewModel
{
    private readonly ISessionService _sessionService;
    private readonly IChamadoService _chamadoService;
    private readonly IUsuarioService _usuarioService;

    private string _nomeUsuario = string.Empty;
    private string _tipoUsuario = string.Empty;
    private string _descricaoTipoUsuario = string.Empty;

    public DashboardViewModel(ISessionService sessionService, IChamadoService chamadoService, IUsuarioService usuarioService)
    {
        _sessionService = sessionService;
        _chamadoService = chamadoService;
        _usuarioService = usuarioService;

        LogoutCommand = new RelayCommand(() => Logout());
        
        // Configurar se√ß√µes baseadas no tipo de usu√°rio
        ConfigureSections();
        LoadUserInfo();
    }

    public string NomeUsuario
    {
        get => _nomeUsuario;
        set => SetProperty(ref _nomeUsuario, value);
    }

    public string TipoUsuario
    {
        get => _tipoUsuario;
        set => SetProperty(ref _tipoUsuario, value);
    }

    public string DescricaoTipoUsuario
    {
        get => _descricaoTipoUsuario;
        set => SetProperty(ref _descricaoTipoUsuario, value);
    }

    public ObservableCollection<DashboardSection> Sections { get; } = new();

    public ICommand LogoutCommand { get; }

    public event Action? LogoutRequested;
    public event Action<string>? NavigateToFormRequested;

    private void LoadUserInfo()
    {
        var usuario = _sessionService.UsuarioLogado;
        if (usuario != null)
        {
            NomeUsuario = usuario.Nome;
            TipoUsuario = usuario.TipoUsuarioDisplay;
            DescricaoTipoUsuario = usuario.TipoUsuarioDescription;
        }
    }

    private void ConfigureSections()
    {
        var usuario = _sessionService.UsuarioLogado;
        if (usuario == null) return;

        switch (usuario.TipoUsuario)
        {
            case UserRole.Cliente:
                ConfigureClienteSections();
                break;
            case UserRole.Tecnico:
                ConfigureTecnicoSections();
                break;
            case UserRole.Administrador:
                ConfigureAdministradorSections();
                break;
        }
    }

    private void ConfigureClienteSections()
    {
        // Se√ß√£o de Chamados
        var chamadosSection = new DashboardSection
        {
            Title = "üìã Gest√£o de Chamados",
            Actions = new ObservableCollection<DashboardAction>
            {
                new DashboardAction
                {
                    Title = "NOVO CHAMADO",
                    Description = "Abrir novo chamado de suporte",
                    Color = "#0078D7",
                    Command = new RelayCommand(() => NavigateToForm("NovoChamado"))
                },
                new DashboardAction
                {
                    Title = "MEUS CHAMADOS",
                    Description = "Hist√≥rico e acompanhamento de chamados",
                    Color = "#00964B",
                    Command = new RelayCommand(() => NavigateToForm("MeusChamados"))
                }
            }
        };

        // Se√ß√£o de Suporte e FAQ
        var suporteSection = new DashboardSection
        {
            Title = "üîç Suporte e FAQ",
            Actions = new ObservableCollection<DashboardAction>
            {
                new DashboardAction
                {
                    Title = "CONSULTAR FAQ",
                    Description = "Buscar perguntas frequentes",
                    Color = "#FF8C00",
                    Command = new RelayCommand(() => NavigateToForm("FAQ"))
                },
                new DashboardAction
                {
                    Title = "CHAT COM IA",
                    Description = "Pr√©-atendimento com intelig√™ncia artificial",
                    Color = "#9C27B0",
                    Command = new RelayCommand(() => NavigateToForm("ChatIA"))
                }
            }
        };

        // Se√ß√£o de Notifica√ß√µes
        var notificacoesSection = new DashboardSection
        {
            Title = "üîî Notifica√ß√µes",
            Actions = new ObservableCollection<DashboardAction>
            {
                new DashboardAction
                {
                    Title = "NOTIFICA√á√ïES",
                    Description = "Visualizar notifica√ß√µes recebidas",
                    Color = "#E91E63",
                    Command = new RelayCommand(() => NavigateToForm("Notificacoes"))
                }
            }
        };

        Sections.Add(chamadosSection);
        Sections.Add(suporteSection);
        Sections.Add(notificacoesSection);
    }

    private void ConfigureTecnicoSections()
    {
        // Se√ß√£o de Chamados
        var chamadosSection = new DashboardSection
        {
            Title = "üìã Gest√£o de Chamados",
            Actions = new ObservableCollection<DashboardAction>
            {
                new DashboardAction
                {
                    Title = "CHAMADOS ATRIBU√çDOS",
                    Description = "Visualizar meus chamados atribu√≠dos",
                    Color = "#0078D7",
                    Command = new RelayCommand(() => NavigateToForm("ChamadosAtribuidos"))
                },
                new DashboardAction
                {
                    Title = "TODOS OS CHAMADOS",
                    Description = "Visualizar todos os chamados do sistema",
                    Color = "#00964B",
                    Command = new RelayCommand(() => NavigateToForm("TodosChamados"))
                }
            }
        };

        // Se√ß√£o de Relat√≥rios
        var relatoriosSection = new DashboardSection
        {
            Title = "üìä Relat√≥rios e Performance",
            Actions = new ObservableCollection<DashboardAction>
            {
                new DashboardAction
                {
                    Title = "RELAT√ìRIOS",
                    Description = "Relat√≥rios de performance e m√©tricas",
                    Color = "#6432A0",
                    Command = new RelayCommand(() => NavigateToForm("Relatorios"))
                }
            }
        };

        // Se√ß√£o de Notifica√ß√µes
        var notificacoesSection = new DashboardSection
        {
            Title = "üîî Notifica√ß√µes",
            Actions = new ObservableCollection<DashboardAction>
            {
                new DashboardAction
                {
                    Title = "NOTIFICA√á√ïES",
                    Description = "Visualizar notifica√ß√µes do t√©cnico",
                    Color = "#E91E63",
                    Command = new RelayCommand(() => NavigateToForm("Notificacoes"))
                }
            }
        };

        Sections.Add(chamadosSection);
        Sections.Add(relatoriosSection);
        Sections.Add(notificacoesSection);
    }

    private void ConfigureAdministradorSections()
    {
        // Se√ß√£o de Gest√£o de Chamados
        var chamadosSection = new DashboardSection
        {
            Title = "üìã Gest√£o de Chamados",
            Actions = new ObservableCollection<DashboardAction>
            {
                new DashboardAction
                {
                    Title = "TODOS OS CHAMADOS",
                    Description = "Gerenciar todos os chamados do sistema",
                    Color = "#0078D7",
                    Command = new RelayCommand(() => NavigateToForm("TodosChamados"))
                },
                new DashboardAction
                {
                    Title = "CHAMADOS ATRIBU√çDOS",
                    Description = "Visualizar chamados atribu√≠dos",
                    Color = "#00964B",
                    Command = new RelayCommand(() => NavigateToForm("ChamadosAtribuidos"))
                },
                new DashboardAction
                {
                    Title = "ATRIBUIR CHAMADOS",
                    Description = "Atribuir chamados para t√©cnicos",
                    Color = "#FF5722",
                    Command = new RelayCommand(() => NavigateToForm("AtribuirChamados"))
                }
            }
        };

        // Se√ß√£o de Gest√£o de Usu√°rios
        var usuariosSection = new DashboardSection
        {
            Title = "üë• Gest√£o de Usu√°rios",
            Actions = new ObservableCollection<DashboardAction>
            {
                new DashboardAction
                {
                    Title = "GERENCIAR USU√ÅRIOS",
                    Description = "Gerenciar usu√°rios do sistema",
                    Color = "#C85000",
                    Command = new RelayCommand(() => NavigateToForm("GerenciarUsuarios"))
                },
                new DashboardAction
                {
                    Title = "CADASTRAR USU√ÅRIO",
                    Description = "Criar novos usu√°rios",
                    Color = "#4CAF50",
                    Command = new RelayCommand(() => NavigateToForm("CadastrarUsuario"))
                },
                new DashboardAction
                {
                    Title = "ALTERAR PERMISS√ïES",
                    Description = "Configurar permiss√µes e hierarquia",
                    Color = "#9C27B0",
                    Command = new RelayCommand(() => NavigateToForm("Permissoes"))
                }
            }
        };

        // Se√ß√£o de Relat√≥rios e An√°lises
        var relatoriosSection = new DashboardSection
        {
            Title = "üìä Relat√≥rios e An√°lises",
            Actions = new ObservableCollection<DashboardAction>
            {
                new DashboardAction
                {
                    Title = "RELAT√ìRIOS EXECUTIVOS",
                    Description = "Relat√≥rios e m√©tricas do sistema",
                    Color = "#6432A0",
                    Command = new RelayCommand(() => NavigateToForm("Relatorios"))
                },
                new DashboardAction
                {
                    Title = "M√âTRICAS DE PERFORMANCE",
                    Description = "An√°lise de performance por t√©cnico",
                    Color = "#FF9800",
                    Command = new RelayCommand(() => NavigateToForm("Metricas"))
                },
                new DashboardAction
                {
                    Title = "AN√ÅLISE DE SATISFA√á√ÉO",
                    Description = "Relat√≥rios de satisfa√ß√£o do cliente",
                    Color = "#2196F3",
                    Command = new RelayCommand(() => NavigateToForm("Satisfacao"))
                }
            }
        };

        // Se√ß√£o de Configura√ß√µes do Sistema
        var configuracoesSection = new DashboardSection
        {
            Title = "‚öôÔ∏è Configura√ß√µes do Sistema",
            Actions = new ObservableCollection<DashboardAction>
            {
                new DashboardAction
                {
                    Title = "CONFIGURA√á√ïES",
                    Description = "Configura√ß√µes gerais do sistema",
                    Color = "#607D8B",
                    Command = new RelayCommand(() => NavigateToForm("Configuracoes"))
                },
                new DashboardAction
                {
                    Title = "LOGS DE AUDITORIA",
                    Description = "Visualizar logs de auditoria",
                    Color = "#795548",
                    Command = new RelayCommand(() => NavigateToForm("Auditoria"))
                },
                new DashboardAction
                {
                    Title = "BACKUP E RESTAURA√á√ÉO",
                    Description = "Gerenciar backup do sistema",
                    Color = "#9E9E9E",
                    Command = new RelayCommand(() => NavigateToForm("Backup"))
                }
            }
        };

        // Se√ß√£o de Notifica√ß√µes
        var notificacoesSection = new DashboardSection
        {
            Title = "üîî Notifica√ß√µes e Comunica√ß√£o",
            Actions = new ObservableCollection<DashboardAction>
            {
                new DashboardAction
                {
                    Title = "NOTIFICA√á√ïES",
                    Description = "Visualizar notifica√ß√µes do sistema",
                    Color = "#E91E63",
                    Command = new RelayCommand(() => NavigateToForm("Notificacoes"))
                },
                new DashboardAction
                {
                    Title = "CONFIGURAR NOTIFICA√á√ïES",
                    Description = "Configurar tipos de notifica√ß√£o",
                    Color = "#F44336",
                    Command = new RelayCommand(() => NavigateToForm("ConfigNotificacoes"))
                }
            }
        };

        Sections.Add(chamadosSection);
        Sections.Add(usuariosSection);
        Sections.Add(relatoriosSection);
        Sections.Add(configuracoesSection);
        Sections.Add(notificacoesSection);
    }

    private void NavigateToForm(string formName)
    {
        NavigateToFormRequested?.Invoke(formName);
    }

    private void Logout()
    {
        LogoutRequested?.Invoke();
    }
}

public class DashboardSection
{
    public string Title { get; set; } = string.Empty;
    public ObservableCollection<DashboardAction> Actions { get; set; } = new();
}

public class DashboardAction
{
    public string Title { get; set; } = string.Empty;
    public string Description { get; set; } = string.Empty;
    public string Color { get; set; } = string.Empty;
    public ICommand Command { get; set; } = new RelayCommand(() => { });
}
